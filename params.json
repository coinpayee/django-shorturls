{"name":"Django Short URLs","tagline":"URL shortening service for Django","body":"This is a simple url shortening service for Django.\r\n\r\nNote: depending on your setup, you might need to use `yourappname.shorturls` instead of just `shorturls` wherever it appears in these instructions\r\n\r\n# Installation\r\n\r\n1. Put the shorturls folder in your Django project\r\n2. Add `shorturls` to your INSTALLED_APPS setting\r\n3. Add `shorturls.middleware.ShortURLMiddleware` to your MIDDLEWARE_CLASSES setting at the end (but before `django.middleware.cache.FetchFromCacheMiddleware` if you're using it)\r\n4. Run `python manage.py syncdb` on the command line in your app folder\r\n\r\n# Integration\r\n\r\nIf you want to have a model created a shorturl for each instance when it is created, add the following `save` method to the model (or add to your existing `save` method)\r\n\r\n\tdef save( self, force_insert=False, force_update=False ):\r\n\t\tfrom shorturls.models import ShortURL\r\n\t\tshorturl, new = ShortURL.objects.get_or_create( url = self.get_absolute_url() )\r\n\t\tif new:\r\n\t\t\tshorturl.save()\r\n\t\tsuper( ModelName, self ).save( force_insert, force_update )\r\n\t\t\r\nAdditionally, if you want to make the shorturl available as a property of each model instance, add the following to the model:\r\n\r\n\tdef shorturl( self ):\r\n\t\ttry:\r\n\t\t\tfrom shorturls.models import ShortURL\r\n\t\t\tshorturl = ShortURL.objects.get( url = self.get_absolute_url() )\r\n\t\texcept:\r\n\t\t\tshorturl = False\r\n\t\treturn shorturl\r\n","google":"UA-3625251-4","note":"Don't delete this file! It's used internally to help with page regeneration."}